/*
 * vim: syntax=c
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        td0: EscGrv {
            compatible = "zmk,behavior-tap-dance";
            label = "Esc ~";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        aero-cadet {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <43 46>;
        };

        arrow-vim-h {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <15 16 18>;
        };

        arrow-vim-j {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <15 16 19>;
        };

        arrow-vim-k {
            bindings = <&kp UP_ARROW>;
            key-positions = <15 16 20>;
        };

        arrow-vim-l {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <15 16 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&gresc     &kp Q  &kp W  &kp E      &kp R         &kp T                                                                      &kp Y      &kp U  &kp I      &kp O    &kp P            &none
&kp CAPS   &kp A  &kp S  &kp D      &kp F         &kp G                                                                      &kp H      &kp J  &kp K      &kp L    &lt 1 SEMICOLON  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V         &kp B         &kp LEFT_BRACKET  &none          &mo 3    &kp RIGHT_BRACKET  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH         &kp RCTRL
                         &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE         &kp BACKSPACE  &kp TAB  &kp RET            &kp RCTRL  &mo 2  &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_DOWN>;
        };

        numsym_layer {
            bindings = <
&trans  &kp MINUS    &kp EQUAL    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                                  &kp N7  &kp N8  &kp N9  &kp N0     &kp ASTERISK  &none
&trans  &kp AT_SIGN  &kp PERCENT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                                  &kp N4  &kp N5  &kp N6  &kp PLUS   &trans        &kp K_PLAY_PAUSE
&trans  &trans       &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &none   &trans  &trans  &kp N1  &kp N2  &kp N3  &kp MINUS  &trans        &trans
                                  &trans                &trans                 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        function_layer {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &kp PRINTSCREEN  &trans      &trans
&caps_word  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans           &kp K_PREV  &kp K_NEXT
&trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans      &trans
                            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        system_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&bootloader  &trans      &trans      &bt BT_CLR  &bt BT_PRV  &bt BT_NXT                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans      &trans      &trans      &trans      &out OUT_TOG                                  &trans  &trans  &trans  &trans  &trans  &trans
&bl BL_TOG   &bl BL_INC  &bl BL_DEC  &trans      &trans      &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans      &trans      &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
